来源：┈┾夨憶D*.亼
第九课教你如何实现基本的建模
上一节我们讲到了gles下的建模的相关知识，这一节我们学习几种最基本的模型，并在下一节给出详细的例子代码分析。下面开始。
上一节曾提到pys60下的两个绘制的函数，drawElements(模型，array类型)和drawArrays(模型，起始下标，总数)(此函数用于绘制当前激活的array的部分或者全部)。对于这两个函数不再细讲，这节着重讲其中的参数模型（模式）。先看有几种：GL_POINTS,GL_LINE_STRIP,GL_LINE_LOOP,GL_LINES,GL_TRIANGLE_STRIP,GL_TRIANGLE_FAN, GL_TRIANGLES
下面对以上模型做一一讲解：
GL_POINTS顾名思义是点模型，作用当然是画点了，画的是array类型中的所有点。我们可以通过glPointSize(float s)来设置点的大小。
GL_LINES绘制直线段，每条直线段对应两个段点，所以array中的序列坐标也是成对的。我们同样可以通过glLineWidth(w)来设置线宽。
GL_LINE_STRIP:直线序列，怎么讲呢？其实意思就是线段是相连的，而不是认为的把坐标写成对，也就是array的点点之间是相连的，这和上一个明星有区别。上面四个点是两条线段，而用这个模式是三条线段。
GL_LINE_LOOP:和上一个类似，不同的是这个是封闭的，即首尾也相连。
GL_TRIANGLES：三角形，画不相连的三角形，当然每三个点对应一个三角形。OPENGLES并不提供多边形模式，原因很简单四个点或者更多点组成的多边形并不一定共面，这样会带来很多的问题，影响速度，所以只有三角形模式，因为肯定是共面的！这也是我们学习的重中之重！下面来最后两个最常用的模式，后面的教程会给出具体的例子解析。也许你会感到疑问，有了三角形为什么还要多两种模式呢？大家知道这个复杂的形体建模后会有多少顶点？要多大的内存？不可想象！所以OPENGL为我们提供了两种三角形几何压缩技术。三角条形带(GL_TRANGLE_STRIP)和三角扇形(GL_TRIANGLE_FAN)。我们后面会看到，这两个是我们曲面建模的最常用的。下面详细讲解下
GL_TRIANGLE:三角扇形，用于顶点是从一个中心点放射出来的形体。比如圆锥（别告诉我你不知道什么是圆锥）。大家可以想象这是个扇形的模型，那么是如何反映到array中的序列中的呢？其实很简单，序列中的前三个点构成第一个三角形，后面每增加一个顶点构成一个新三角形，另外两个点来自序列的第一个点和离新点最近的一个点。一定要记住这个。
GL_TRIANGLE_STRIP:三角条形带，也许细心的人会发现，扇形的可能并不是那处处合适，因为曲面更常见的是一般的情况，于是我们要用到这样的条形来细分曲面，这样更能逼近曲面。那这个又是怎样反映到序列的呢？也很简单前三个顶点形成一个三角形，后面每增加一个形成新三角形，另外两个点来自新点前面两个点，注意二者的区别。
好了，这一节先讲这么多吧。好好理解，后面更精彩。记得为我们社区添砖加瓦哦！
